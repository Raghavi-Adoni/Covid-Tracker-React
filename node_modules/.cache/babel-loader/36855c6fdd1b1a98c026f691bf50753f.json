{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raghavi\\\\Desktop\\\\New folder\\\\web\\\\cor-tracker\\\\src\\\\components\\\\CountryPicker\\\\CountryPicker.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { countries } from '../../api';\n\nconst CountryPicker = () => {\n  const [fetchedCountries, setFetchedCountries] = useState([]); //[setFetchedCountries] will cause useEffect to run only when setFetchedCountries will change\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      setFetchedCountries(await countries);\n    };\n\n    fetchCountries();\n  }, [setFetchedCountries]);\n  console.log(fetchedCountries);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"global\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Global\")));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["C:/Users/Raghavi/Desktop/New folder/web/cor-tracker/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","countries","CountryPicker","fetchedCountries","setFetchedCountries","fetchCountries","console","log","formControl"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAAyC,mBAAzC;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,SAAR,QAAwB,WAAxB;;AACA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD,CADwB,CAGxB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACX,UAAMQ,cAAc,GAAG,YAAY;AAChCD,MAAAA,mBAAmB,CAAC,MAAMH,SAAP,CAAnB;AACF,KAFD;;AAIAI,IAAAA,cAAc;AAElB,GAPQ,EAOP,CAACD,mBAAD,CAPO,CAAT;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACA,sBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEH,MAAM,CAACQ,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,CADJ;AAOH,CArBD;;AAuBA,eAAeN,aAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport {countries} from '../../api';\r\nconst CountryPicker = () => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    //[setFetchedCountries] will cause useEffect to run only when setFetchedCountries will change\r\n    useEffect(() => {\r\n         const fetchCountries = async () => {\r\n            setFetchedCountries(await countries);\r\n         } \r\n\r\n         fetchCountries();\r\n\r\n    },[setFetchedCountries])\r\n\r\n    console.log(fetchedCountries);\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect>\r\n                <option value=\"global\">Global</option>\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n"]},"metadata":{},"sourceType":"module"}