{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raghavi\\\\Desktop\\\\New folder\\\\web\\\\cor-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from '../Chart/Chart.module.css';\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  const modifiedData = data.map(dailyData => ({\n    confirmed: dailyData.confirmed.value,\n    deaths: dailyData.deaths.value,\n    recovered: dailyData.recovered.value\n  })); //console.log(confirmed);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const dailyData = await fetchDailyData();\n      setDailyData(dailyData);\n    };\n\n    fetchApi();\n  }, []);\n  const lineChartData = {\n    labels: dailyData.map(({\n      date\n    }) => date),\n    datasets: [{\n      data: dailyData.map(({\n        confirmed\n      }) => confirmed),\n      label: 'Infected',\n      borderColor: '#3333ff',\n      fill: true\n    }, {\n      data: dailyData.map(({\n        deaths\n      }) => deaths),\n      label: 'Deaths',\n      borderColor: 'red',\n      fill: true,\n      backgroundColor: 'rgba(255,0,0,0.5)'\n    }]\n  };\n  const barChartData = {\n    labels: ['Infected', 'Recovered', 'Deaths'],\n    datasets: [{\n      label: 'People',\n      backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\n      data: [modifiedData.confirmed, modifiedData.recovered, modifiedData.deaths]\n    }],\n    options: [{\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, country ? /*#__PURE__*/React.createElement(Bar, {\n    data: barChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Line, {\n    data: lineChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 50\n    }\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Raghavi/Desktop/New folder/web/cor-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","modifiedData","map","confirmed","value","deaths","recovered","fetchApi","lineChartData","labels","date","datasets","label","borderColor","fill","backgroundColor","barChartData","options","legend","display","title","text","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport {fetchDailyData  } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from '../Chart/Chart.module.css';\r\n\r\nconst Chart = ({ data, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    const modifiedData = data.map((dailyData) => ({\r\n        confirmed: dailyData.confirmed.value,\r\n        deaths: dailyData.deaths.value,\r\n        recovered: dailyData.recovered.value,\r\n    }));\r\n    //console.log(confirmed);\r\n    \r\n    useEffect ( () => {\r\n        const fetchApi = async () => {\r\n            const dailyData = await fetchDailyData();\r\n            setDailyData(dailyData);\r\n        } \r\n        \r\n        fetchApi();\r\n\r\n    },[]);\r\n\r\n    const lineChartData = {\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [{\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    },\r\n                    {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n\r\n                    } ],\r\n      }\r\n       \r\n      const barChartData = {\r\n          \r\n        labels:['Infected','Recovered','Deaths'],\r\n        datasets: [{\r\n                      label: 'People',\r\n                      backgroundColor: [\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)'\r\n                      ],\r\n                      data: [modifiedData.confirmed,modifiedData.recovered,modifiedData.deaths]\r\n                    } ],\r\n        options: [{\r\n            legend: {display: false},\r\n            title: {display: true, text: `Current state in ${country}`},\r\n        }]\r\n      }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n         {/* check if data fetched or not */}\r\n        { country ? <Bar data={barChartData}/> : <Line data={lineChartData}/> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}