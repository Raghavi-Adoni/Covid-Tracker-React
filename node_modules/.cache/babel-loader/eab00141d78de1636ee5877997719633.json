{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raghavi\\\\Desktop\\\\New folder\\\\web\\\\cor-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from '../Chart/Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      const dailyData = await fetchDailyData();\n      setDailyData(dailyData);\n    };\n\n    fetchApi();\n  });\n  const lineChartData = {\n    labels: dailyData.map(({\n      date\n    }) => date),\n    datasets: [{\n      data: dailyData.map(({\n        confirmed\n      }) => confirmed),\n      label: 'Infected',\n      borderColor: '#3333ff',\n      fill: true\n    }, {\n      data: dailyData.map(({\n        deaths\n      }) => deaths),\n      label: 'Deaths',\n      borderColor: 'red',\n      fill: true,\n      backgroundColor: 'rgba(255,0,0,0.5)'\n    }]\n  };\n  const barChartData = {\n    labels: ['Infected', 'Recovered', 'Deaths'],\n    datasets: [{\n      label: 'People',\n      backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\n      data: [confirmed, recovered, deaths]\n    }] // options: [{\n    //     legend: {display: false},\n    //     title: {display: true, text: `Current state in ${country}`},\n    // }]\n\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, country ? /*#__PURE__*/React.createElement(Bar, {\n    data: barChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Line, {\n    data: lineChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 50\n    }\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Raghavi/Desktop/New folder/web/cor-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchApi","lineChartData","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChartData","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAAQC,cAAR,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAWC,IAAAA,SAAX;AAAqBC,IAAAA;AAArB,GAAR;AAAsCC,EAAAA;AAAtC,CAAD,KAAqD;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAGAC,EAAAA,SAAS,CAAG,MAAM;AACd,UAAMa,QAAQ,GAAG,YAAY;AACzB,YAAMF,SAAS,GAAG,MAAMV,cAAc,EAAtC;AACAW,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACH,KAHD;;AAKAE,IAAAA,QAAQ;AAEX,GARQ,CAAT;AAUA,QAAMC,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAEJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcA,IAA5B,CADU;AAElBC,IAAAA,QAAQ,EAAE,CAAC;AACKZ,MAAAA,IAAI,EAAEK,SAAS,CAACK,GAAV,CAAc,CAAC;AAAET,QAAAA;AAAF,OAAD,KAAmBA,SAAjC,CADX;AAEKY,MAAAA,KAAK,EAAE,UAFZ;AAGKC,MAAAA,WAAW,EAAE,SAHlB;AAIKC,MAAAA,IAAI,EAAE;AAJX,KAAD,EAME;AACIf,MAAAA,IAAI,EAAEK,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEP,QAAAA;AAAF,OAAD,KAAgBA,MAA9B,CADV;AAEIU,MAAAA,KAAK,EAAE,QAFX;AAGIC,MAAAA,WAAW,EAAE,KAHjB;AAIIC,MAAAA,IAAI,EAAE,IAJV;AAKIC,MAAAA,eAAe,EAAE;AALrB,KANF;AAFQ,GAAtB;AAkBE,QAAMC,YAAY,GAAG;AAEnBR,IAAAA,MAAM,EAAC,CAAC,UAAD,EAAY,WAAZ,EAAwB,QAAxB,CAFY;AAGnBG,IAAAA,QAAQ,EAAE,CAAC;AACGC,MAAAA,KAAK,EAAE,QADV;AAEGG,MAAAA,eAAe,EAAE,CACf,mBADe,EAEf,mBAFe,EAGf,mBAHe,CAFpB;AAOGhB,MAAAA,IAAI,EAAE,CAACC,SAAD,EAAWC,SAAX,EAAqBC,MAArB;AAPT,KAAD,CAHS,CAYnB;AACA;AACA;AACA;;AAfmB,GAArB;AAkBF,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACoB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEd,OAAO,gBAAG,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAEa,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAgC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAET,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFzC,CADJ;AAMH,CAxDD;;AA0DA,eAAeT,KAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport {fetchDailyData  } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from '../Chart/Chart.module.css';\r\n\r\nconst Chart = ({ data: {confirmed,recovered,deaths}, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    \r\n    useEffect ( () => {\r\n        const fetchApi = async () => {\r\n            const dailyData = await fetchDailyData();\r\n            setDailyData(dailyData);\r\n        } \r\n        \r\n        fetchApi();\r\n\r\n    });\r\n\r\n    const lineChartData = {\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [{\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    },\r\n                    {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n\r\n                    } ],\r\n      }\r\n       \r\n      const barChartData = {\r\n          \r\n        labels:['Infected','Recovered','Deaths'],\r\n        datasets: [{\r\n                      label: 'People',\r\n                      backgroundColor: [\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)'\r\n                      ],\r\n                      data: [confirmed,recovered,deaths]\r\n                    } ],\r\n        // options: [{\r\n        //     legend: {display: false},\r\n        //     title: {display: true, text: `Current state in ${country}`},\r\n        // }]\r\n      }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n         {/* check if data fetched or not */}\r\n        { country ? <Bar data={barChartData}/> : <Line data={lineChartData}/> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}